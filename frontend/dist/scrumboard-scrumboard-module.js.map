{"version":3,"sources":["webpack:///./node_modules/ng2-dnd/ng2-dnd.es5.js","webpack:///./src/app/scrumboard/scrumboard.component.html","webpack:///./src/app/scrumboard/scrumboard.component.scss","webpack:///./src/app/scrumboard/scrumboard.component.ts","webpack:///./src/app/scrumboard/scrumboard.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC2H;AACjF;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,gEAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,gEAAU;AACd;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mDAAmD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE,wEAAwE;AACxE,yEAAyE;AACzE,oEAAoE;AACpE;AACA,yEAAyE;AACzE,uEAAuE;AACvE;AACA,CAAC;AACD;AACA,IAAI,gEAAU;AACd,uCAAuC,wDAAU;AACjD,QAAQ,+DAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAA6C;AAC1E;AACA;AACA,CAAC;AACD;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA,IAAI,+DAAS,EAAE,8BAA8B;AAC7C,uCAAuC,wDAAU;AACjD,QAAQ,+DAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,+DAAS,EAAE,qCAAqC;AACpD,uCAAuC,wDAAU;AACjD,QAAQ,+DAAiB;AACzB;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mCAAmC,8DAA8D;AACjG;AACA;AACA;AACA;AACA;AACA,kCAAkC,8DAA8D;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8DAA8D;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8DAA8D;AACnG;AACA,kEAAkE,8DAA8D;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,+DAAS,EAAE,8BAA8B;AAC7C,uCAAuC,wDAAU;AACjD,QAAQ,+DAAiB;AACzB;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA,oBAAoB,SAAI,IAAI,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,wDAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,+DAAS,EAAE,uCAAuC;AACtD,uCAAuC,wDAAU,mCAAmC,+DAAiB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtD,wCAAwC,0DAAY;AACpD,uCAAuC,0DAAY;AACnD,sCAAsC,0DAAY;AAClD,0CAA0C,0DAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,2DAAK;AACT;AACA;AACA;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,4DAAM;AACV,gCAAgC,0DAAY;AAC5C;AACA;AACA,IAAI,+DAAS,EAAE,6BAA6B;AAC5C,uCAAuC,wDAAU;AACjD;AACA;AACA,QAAQ,+DAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,+DAAS,EAAE,oCAAoC;AACnD,uCAAuC,wDAAU;AACjD,QAAQ,+DAAiB;AACzB;AACA;AACA;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+DAA+D;AACpE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,8DAAQ;AACZ;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4W;AAC5W;;;;;;;;;;;;AChkCA,8IAA8I,mEAAmE,eAAe,krBAAkrB,sHAAsH,QAAQ,gfAAgf,kGAAkG,OAAO,kdAAkd,kGAAkG,OAAO,8I;;;;;;;;;;;ACApqE,iCAAiC,kBAAkB,EAAE,oBAAoB,iCAAiC,qCAAqC,EAAE,+CAA+C,uhB;;;;;;;;;;;;;;;;;ACA9I;AAOlD;IALA;QAOI,UAAK,GAAkB,CAAC,oBAAoB,EAAE,cAAc,EAAE,gBAAgB,EAAE,aAAa,EAAE,cAAc,EAAE,WAAW,EAAE,cAAc,EAAE,gBAAgB,EAAE,YAAY,EAAE,kBAAkB,CAAC,CAAC;QAChM,eAAU,GAAkB,EAAE,CAAC;QAC/B,YAAO,GAAkB,EAAE,CAAC;IAEhC,CAAC;IANY,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;OACW,mBAAmB,CAM/B;IAAD,0BAAC;CAAA;AAN+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AACM;AACc;AACN;AACnB;AACS;AACW;AAKzB;AACxB,IAAM,MAAM,GAAW;IAC3B,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yEAAmB,EAAE;CAC9C,CAAC;AAcF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAb5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,iDAAS,CAAC,OAAO,EAAE;gBACnB,0DAAW;gBACX,kEAAgB;gBAChB,qEAAgB;gBAChB,+DAAa;gBACb,+DAAa;aACd;YACD,YAAY,EAAE,CAAC,yEAAmB,CAAC;SACpC,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ","file":"scrumboard-scrumboard-module.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, Output } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n/**\n * Check and return true if an object is type of string\n */\nfunction isString(obj) {\n    return typeof obj === \"string\";\n}\n/**\n * Check and return true if an object not undefined or null\n */\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\n/**\n * Check and return true if an object is type of Function\n */\nfunction isFunction(obj) {\n    return typeof obj === \"function\";\n}\n/**\n * Create Image element with specified url string\n */\nfunction createImage(src) {\n    var img = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n/**\n * Call the function\n */\nfunction callFun(fun) {\n    return fun();\n}\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar DataTransferEffect = /** @class */ (function () {\n    function DataTransferEffect(name) {\n        this.name = name;\n    }\n    return DataTransferEffect;\n}());\nDataTransferEffect.COPY = new DataTransferEffect('copy');\nDataTransferEffect.LINK = new DataTransferEffect('link');\nDataTransferEffect.MOVE = new DataTransferEffect('move');\nDataTransferEffect.NONE = new DataTransferEffect('none');\nvar DragImage = /** @class */ (function () {\n    function DragImage(imageElement, x_offset, y_offset) {\n        if (x_offset === void 0) { x_offset = 0; }\n        if (y_offset === void 0) { y_offset = 0; }\n        this.imageElement = imageElement;\n        this.x_offset = x_offset;\n        this.y_offset = y_offset;\n        if (isString(this.imageElement)) {\n            // Create real image from string source\n            var imgScr = this.imageElement;\n            this.imageElement = new HTMLImageElement();\n            this.imageElement.src = imgScr;\n        }\n    }\n    return DragImage;\n}());\nvar DragDropConfig = /** @class */ (function () {\n    function DragDropConfig() {\n        this.onDragStartClass = \"dnd-drag-start\";\n        this.onDragEnterClass = \"dnd-drag-enter\";\n        this.onDragOverClass = \"dnd-drag-over\";\n        this.onSortableDragClass = \"dnd-sortable-drag\";\n        this.dragEffect = DataTransferEffect.MOVE;\n        this.dropEffect = DataTransferEffect.MOVE;\n        this.dragCursor = \"move\";\n        this.defaultCursor = \"pointer\";\n    }\n    return DragDropConfig;\n}());\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n        return Reflect.metadata(k, v);\n};\nvar DragDropData = /** @class */ (function () {\n    function DragDropData() {\n    }\n    return DragDropData;\n}());\nfunction dragDropServiceFactory() {\n    return new DragDropService();\n}\nvar DragDropService = /** @class */ (function () {\n    function DragDropService() {\n        this.allowedDropZones = [];\n    }\n    return DragDropService;\n}());\nDragDropService = __decorate$1([\n    Injectable()\n], DragDropService);\nfunction dragDropSortableServiceFactory(config) {\n    return new DragDropSortableService(config);\n}\nvar DragDropSortableService = /** @class */ (function () {\n    function DragDropSortableService(_config) {\n        this._config = _config;\n    }\n    Object.defineProperty(DragDropSortableService.prototype, \"elem\", {\n        get: function () {\n            return this._elem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DragDropSortableService.prototype.markSortable = function (elem) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    };\n    return DragDropSortableService;\n}());\nDragDropSortableService = __decorate$1([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [DragDropConfig])\n], DragDropSortableService);\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$2 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n        return Reflect.metadata(k, v);\n};\nvar AbstractComponent = /** @class */ (function () {\n    function AbstractComponent(elemRef, _dragDropService, _config, _cdr) {\n        var _this = this;\n        this._dragDropService = _dragDropService;\n        this._config = _config;\n        this._cdr = _cdr;\n        /**\n         * Whether the object is draggable. Default is true.\n         */\n        this._dragEnabled = false;\n        /**\n         * Allows drop on this element\n         */\n        this.dropEnabled = false;\n        this.dropZones = [];\n        this.cloneItem = false;\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor; // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = function (event) {\n            _this._onDragEnter(event);\n        };\n        this._elem.ondragover = function (event) {\n            _this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = _this._config.dropEffect.name;\n            }\n            return false;\n        };\n        this._elem.ondragleave = function (event) {\n            _this._onDragLeave(event);\n        };\n        this._elem.ondrop = function (event) {\n            _this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n        this._elem.onmousedown = function (event) {\n            _this._target = event.target;\n        };\n        this._elem.ondragstart = function (event) {\n            if (_this._dragHandle) {\n                if (!_this._dragHandle.contains(_this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n            _this._onDragStart(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = _this.effectAllowed || _this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(_this.dragImage)) {\n                    if (isString(_this.dragImage)) {\n                        event.dataTransfer.setDragImage(createImage(_this.dragImage));\n                    }\n                    else if (isFunction(_this.dragImage)) {\n                        event.dataTransfer.setDragImage(callFun(_this.dragImage));\n                    }\n                    else {\n                        var img = _this.dragImage;\n                        event.dataTransfer.setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                }\n                else if (isPresent(_this._config.dragImage)) {\n                    var dragImage = _this._config.dragImage;\n                    event.dataTransfer.setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                }\n                else if (_this.cloneItem) {\n                    _this._dragHelper = _this._elem.cloneNode(true);\n                    _this._dragHelper.classList.add('dnd-drag-item');\n                    _this._dragHelper.style.position = \"absolute\";\n                    _this._dragHelper.style.top = \"0px\";\n                    _this._dragHelper.style.left = \"-1000px\";\n                    _this._elem.parentElement.appendChild(_this._dragHelper);\n                    event.dataTransfer.setDragImage(_this._dragHelper, event.offsetX, event.offsetY);\n                }\n                // Change drag cursor\n                var cursorelem = (_this._dragHandle) ? _this._dragHandle : _this._elem;\n                if (_this._dragEnabled) {\n                    cursorelem.style.cursor = _this.effectCursor ? _this.effectCursor : _this._config.dragCursor;\n                }\n                else {\n                    cursorelem.style.cursor = _this._defaultCursor;\n                }\n            }\n        };\n        this._elem.ondragend = function (event) {\n            if (_this._elem.parentElement && _this._dragHelper) {\n                _this._elem.parentElement.removeChild(_this._dragHelper);\n            }\n            // console.log('ondragend', event.target);\n            _this._onDragEnd(event);\n            // Restore style of dragged element\n            var cursorelem = (_this._dragHandle) ? _this._dragHandle : _this._elem;\n            cursorelem.style.cursor = _this._defaultCursor;\n        };\n    }\n    Object.defineProperty(AbstractComponent.prototype, \"dragEnabled\", {\n        get: function () {\n            return this._dragEnabled;\n        },\n        set: function (enabled) {\n            this._dragEnabled = !!enabled;\n            this._elem.draggable = this._dragEnabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractComponent.prototype.setDragHandle = function (elem) {\n        this._dragHandle = elem;\n    };\n    /******* Change detection ******/\n    AbstractComponent.prototype.detectChanges = function () {\n        var _this = this;\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(function () {\n            if (_this._cdr && !_this._cdr.destroyed) {\n                _this._cdr.detectChanges();\n            }\n        }, 250);\n    };\n    //****** Droppable *******//\n    AbstractComponent.prototype._onDragEnter = function (event) {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    };\n    AbstractComponent.prototype._onDragOver = function (event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n            this._onDragOverCallback(event);\n        }\n    };\n    AbstractComponent.prototype._onDragLeave = function (event) {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    };\n    AbstractComponent.prototype._onDrop = function (event) {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n            this._onDropCallback(event);\n            this.detectChanges();\n        }\n    };\n    AbstractComponent.prototype._isDropAllowed = function (event) {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (var i = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                var dragZone = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    AbstractComponent.prototype._preventAndStop = function (event) {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    };\n    //*********** Draggable **********//\n    AbstractComponent.prototype._onDragStart = function (event) {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n        }\n    };\n    AbstractComponent.prototype._onDragEnd = function (event) {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    };\n    //**** Drop Callbacks ****//\n    AbstractComponent.prototype._onDragEnterCallback = function (event) { };\n    AbstractComponent.prototype._onDragOverCallback = function (event) { };\n    AbstractComponent.prototype._onDragLeaveCallback = function (event) { };\n    AbstractComponent.prototype._onDropCallback = function (event) { };\n    //**** Drag Callbacks ****//\n    AbstractComponent.prototype._onDragStartCallback = function (event) { };\n    AbstractComponent.prototype._onDragEndCallback = function (event) { };\n    return AbstractComponent;\n}());\nAbstractComponent = __decorate$3([\n    Injectable(),\n    __metadata$2(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        ChangeDetectorRef])\n], AbstractComponent);\nvar AbstractHandleComponent = /** @class */ (function () {\n    function AbstractHandleComponent(elemRef, _dragDropService, _config, _Component, _cdr) {\n        this._dragDropService = _dragDropService;\n        this._config = _config;\n        this._Component = _Component;\n        this._cdr = _cdr;\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n    return AbstractHandleComponent;\n}());\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n        return Reflect.metadata(k, v);\n};\nvar DraggableComponent = /** @class */ (function (_super) {\n    __extends(DraggableComponent, _super);\n    function DraggableComponent(elemRef, dragDropService, config, cdr) {\n        var _this = _super.call(this, elemRef, dragDropService, config, cdr) || this;\n        /**\n         * Callback function called when the drag actions happened.\n         */\n        _this.onDragStart = new EventEmitter();\n        _this.onDragEnd = new EventEmitter();\n        /**\n         * Callback function called when the drag action ends with a valid drop action.\n         * It is activated after the on-drop-success callback\n         */\n        _this.onDragSuccessCallback = new EventEmitter();\n        _this._defaultCursor = _this._elem.style.cursor;\n        _this.dragEnabled = true;\n        return _this;\n    }\n    Object.defineProperty(DraggableComponent.prototype, \"draggable\", {\n        set: function (value) {\n            this.dragEnabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DraggableComponent.prototype, \"dropzones\", {\n        set: function (value) {\n            this.dropZones = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DraggableComponent.prototype, \"effectallowed\", {\n        /**\n         * Drag allowed effect\n         */\n        set: function (value) {\n            this.effectAllowed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DraggableComponent.prototype, \"effectcursor\", {\n        /**\n         * Drag effect cursor\n         */\n        set: function (value) {\n            this.effectCursor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DraggableComponent.prototype._onDragStartCallback = function (event) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({ dragData: this.dragData, mouseEvent: event });\n    };\n    DraggableComponent.prototype._onDragEndCallback = function (event) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({ dragData: this.dragData, mouseEvent: event });\n    };\n    return DraggableComponent;\n}(AbstractComponent));\n__decorate$2([\n    Input(\"dragEnabled\"),\n    __metadata$1(\"design:type\", Boolean),\n    __metadata$1(\"design:paramtypes\", [Boolean])\n], DraggableComponent.prototype, \"draggable\", null);\n__decorate$2([\n    Output(),\n    __metadata$1(\"design:type\", EventEmitter)\n], DraggableComponent.prototype, \"onDragStart\", void 0);\n__decorate$2([\n    Output(),\n    __metadata$1(\"design:type\", EventEmitter)\n], DraggableComponent.prototype, \"onDragEnd\", void 0);\n__decorate$2([\n    Input(),\n    __metadata$1(\"design:type\", Object)\n], DraggableComponent.prototype, \"dragData\", void 0);\n__decorate$2([\n    Output(\"onDragSuccess\"),\n    __metadata$1(\"design:type\", EventEmitter)\n], DraggableComponent.prototype, \"onDragSuccessCallback\", void 0);\n__decorate$2([\n    Input(\"dropZones\"),\n    __metadata$1(\"design:type\", Array),\n    __metadata$1(\"design:paramtypes\", [Array])\n], DraggableComponent.prototype, \"dropzones\", null);\n__decorate$2([\n    Input(\"effectAllowed\"),\n    __metadata$1(\"design:type\", String),\n    __metadata$1(\"design:paramtypes\", [String])\n], DraggableComponent.prototype, \"effectallowed\", null);\n__decorate$2([\n    Input(\"effectCursor\"),\n    __metadata$1(\"design:type\", String),\n    __metadata$1(\"design:paramtypes\", [String])\n], DraggableComponent.prototype, \"effectcursor\", null);\n__decorate$2([\n    Input(),\n    __metadata$1(\"design:type\", Object)\n], DraggableComponent.prototype, \"dragImage\", void 0);\n__decorate$2([\n    Input(),\n    __metadata$1(\"design:type\", Boolean)\n], DraggableComponent.prototype, \"cloneItem\", void 0);\nDraggableComponent = __decorate$2([\n    Directive({ selector: '[dnd-draggable]' }),\n    __metadata$1(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        ChangeDetectorRef])\n], DraggableComponent);\nvar DraggableHandleComponent = /** @class */ (function (_super) {\n    __extends(DraggableHandleComponent, _super);\n    function DraggableHandleComponent(elemRef, dragDropService, config, _Component, cdr) {\n        return _super.call(this, elemRef, dragDropService, config, _Component, cdr) || this;\n    }\n    return DraggableHandleComponent;\n}(AbstractHandleComponent));\nDraggableHandleComponent = __decorate$2([\n    Directive({ selector: '[dnd-draggable-handle]' }),\n    __metadata$1(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, DraggableComponent,\n        ChangeDetectorRef])\n], DraggableHandleComponent);\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$4 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$3 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n        return Reflect.metadata(k, v);\n};\nvar DroppableComponent = /** @class */ (function (_super) {\n    __extends(DroppableComponent, _super);\n    function DroppableComponent(elemRef, dragDropService, config, cdr) {\n        var _this = _super.call(this, elemRef, dragDropService, config, cdr) || this;\n        /**\n         * Callback function called when the drop action completes correctly.\n         * It is activated before the on-drag-success callback.\n         */\n        _this.onDropSuccess = new EventEmitter();\n        _this.onDragEnter = new EventEmitter();\n        _this.onDragOver = new EventEmitter();\n        _this.onDragLeave = new EventEmitter();\n        _this.dropEnabled = true;\n        return _this;\n    }\n    Object.defineProperty(DroppableComponent.prototype, \"droppable\", {\n        set: function (value) {\n            this.dropEnabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DroppableComponent.prototype, \"allowdrop\", {\n        set: function (value) {\n            this.allowDrop = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DroppableComponent.prototype, \"dropzones\", {\n        set: function (value) {\n            this.dropZones = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DroppableComponent.prototype, \"effectallowed\", {\n        /**\n         * Drag allowed effect\n         */\n        set: function (value) {\n            this.effectAllowed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DroppableComponent.prototype, \"effectcursor\", {\n        /**\n         * Drag effect cursor\n         */\n        set: function (value) {\n            this.effectCursor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DroppableComponent.prototype._onDragEnterCallback = function (event) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n        }\n    };\n    DroppableComponent.prototype._onDragOverCallback = function (event) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n        }\n    };\n    ;\n    DroppableComponent.prototype._onDragLeaveCallback = function (event) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n        }\n    };\n    ;\n    DroppableComponent.prototype._onDropCallback = function (event) {\n        var dataTransfer = event.dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    };\n    return DroppableComponent;\n}(AbstractComponent));\n__decorate$4([\n    Input(\"dropEnabled\"),\n    __metadata$3(\"design:type\", Boolean),\n    __metadata$3(\"design:paramtypes\", [Boolean])\n], DroppableComponent.prototype, \"droppable\", null);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDropSuccess\", void 0);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDragEnter\", void 0);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDragOver\", void 0);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDragLeave\", void 0);\n__decorate$4([\n    Input(\"allowDrop\"),\n    __metadata$3(\"design:type\", Function),\n    __metadata$3(\"design:paramtypes\", [Function])\n], DroppableComponent.prototype, \"allowdrop\", null);\n__decorate$4([\n    Input(\"dropZones\"),\n    __metadata$3(\"design:type\", Array),\n    __metadata$3(\"design:paramtypes\", [Array])\n], DroppableComponent.prototype, \"dropzones\", null);\n__decorate$4([\n    Input(\"effectAllowed\"),\n    __metadata$3(\"design:type\", String),\n    __metadata$3(\"design:paramtypes\", [String])\n], DroppableComponent.prototype, \"effectallowed\", null);\n__decorate$4([\n    Input(\"effectCursor\"),\n    __metadata$3(\"design:type\", String),\n    __metadata$3(\"design:paramtypes\", [String])\n], DroppableComponent.prototype, \"effectcursor\", null);\nDroppableComponent = __decorate$4([\n    Directive({ selector: '[dnd-droppable]' }),\n    __metadata$3(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        ChangeDetectorRef])\n], DroppableComponent);\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$5 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$4 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n        return Reflect.metadata(k, v);\n};\nvar SortableContainer = /** @class */ (function (_super) {\n    __extends(SortableContainer, _super);\n    function SortableContainer(elemRef, dragDropService, config, cdr, _sortableDataService) {\n        var _this = _super.call(this, elemRef, dragDropService, config, cdr) || this;\n        _this._sortableDataService = _sortableDataService;\n        _this._sortableData = [];\n        _this.dragEnabled = false;\n        return _this;\n    }\n    Object.defineProperty(SortableContainer.prototype, \"draggable\", {\n        set: function (value) {\n            this.dragEnabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SortableContainer.prototype, \"sortableData\", {\n        get: function () {\n            return this._sortableData;\n        },\n        set: function (sortableData) {\n            this._sortableData = sortableData;\n            if (sortableData instanceof FormArray) {\n                this.sortableHandler = new SortableFormArrayHandler();\n            }\n            else {\n                this.sortableHandler = new SortableArrayHandler();\n            }\n            //\n            this.dropEnabled = !!this._sortableData;\n            // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SortableContainer.prototype, \"dropzones\", {\n        set: function (value) {\n            this.dropZones = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SortableContainer.prototype._onDragEnterCallback = function (event) {\n        if (this._sortableDataService.isDragged) {\n            var item = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    };\n    SortableContainer.prototype.getItemAt = function (index) {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    };\n    SortableContainer.prototype.indexOf = function (item) {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    };\n    SortableContainer.prototype.removeItemAt = function (index) {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    };\n    SortableContainer.prototype.insertItemAt = function (item, index) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    };\n    return SortableContainer;\n}(AbstractComponent));\n__decorate$5([\n    Input(\"dragEnabled\"),\n    __metadata$4(\"design:type\", Boolean),\n    __metadata$4(\"design:paramtypes\", [Boolean])\n], SortableContainer.prototype, \"draggable\", null);\n__decorate$5([\n    Input(),\n    __metadata$4(\"design:type\", Object),\n    __metadata$4(\"design:paramtypes\", [Object])\n], SortableContainer.prototype, \"sortableData\", null);\n__decorate$5([\n    Input(\"dropZones\"),\n    __metadata$4(\"design:type\", Array),\n    __metadata$4(\"design:paramtypes\", [Array])\n], SortableContainer.prototype, \"dropzones\", null);\nSortableContainer = __decorate$5([\n    Directive({ selector: '[dnd-sortable-container]' }),\n    __metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, ChangeDetectorRef,\n        DragDropSortableService])\n], SortableContainer);\nvar SortableArrayHandler = /** @class */ (function () {\n    function SortableArrayHandler() {\n    }\n    SortableArrayHandler.prototype.getItemAt = function (sortableData, index) {\n        return sortableData[index];\n    };\n    SortableArrayHandler.prototype.indexOf = function (sortableData, item) {\n        return sortableData.indexOf(item);\n    };\n    SortableArrayHandler.prototype.removeItemAt = function (sortableData, index) {\n        sortableData.splice(index, 1);\n    };\n    SortableArrayHandler.prototype.insertItemAt = function (sortableData, item, index) {\n        sortableData.splice(index, 0, item);\n    };\n    return SortableArrayHandler;\n}());\nvar SortableFormArrayHandler = /** @class */ (function () {\n    function SortableFormArrayHandler() {\n    }\n    SortableFormArrayHandler.prototype.getItemAt = function (sortableData, index) {\n        return sortableData.at(index);\n    };\n    SortableFormArrayHandler.prototype.indexOf = function (sortableData, item) {\n        return sortableData.controls.indexOf(item);\n    };\n    SortableFormArrayHandler.prototype.removeItemAt = function (sortableData, index) {\n        sortableData.removeAt(index);\n    };\n    SortableFormArrayHandler.prototype.insertItemAt = function (sortableData, item, index) {\n        sortableData.insert(index, item);\n    };\n    return SortableFormArrayHandler;\n}());\nvar SortableComponent = /** @class */ (function (_super) {\n    __extends(SortableComponent, _super);\n    function SortableComponent(elemRef, dragDropService, config, _sortableContainer, _sortableDataService, cdr) {\n        var _this = _super.call(this, elemRef, dragDropService, config, cdr) || this;\n        _this._sortableContainer = _sortableContainer;\n        _this._sortableDataService = _sortableDataService;\n        /**\n         * Callback function called when the drag action ends with a valid drop action.\n         * It is activated after the on-drop-success callback\n         */\n        _this.onDragSuccessCallback = new EventEmitter();\n        _this.onDragStartCallback = new EventEmitter();\n        _this.onDragOverCallback = new EventEmitter();\n        _this.onDragEndCallback = new EventEmitter();\n        _this.onDropSuccessCallback = new EventEmitter();\n        _this.dropZones = _this._sortableContainer.dropZones;\n        _this.dragEnabled = true;\n        _this.dropEnabled = true;\n        return _this;\n    }\n    Object.defineProperty(SortableComponent.prototype, \"draggable\", {\n        set: function (value) {\n            this.dragEnabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SortableComponent.prototype, \"droppable\", {\n        set: function (value) {\n            this.dropEnabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SortableComponent.prototype, \"effectallowed\", {\n        /**\n         * Drag allowed effect\n         */\n        set: function (value) {\n            this.effectAllowed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SortableComponent.prototype, \"effectcursor\", {\n        /**\n         * Drag effect cursor\n         */\n        set: function (value) {\n            this.effectCursor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SortableComponent.prototype._onDragStartCallback = function (event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    };\n    SortableComponent.prototype._onDragOverCallback = function (event) {\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\n        }\n    };\n    SortableComponent.prototype._onDragEndCallback = function (event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    };\n    SortableComponent.prototype._onDragEnterCallback = function (event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                var item = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    };\n    SortableComponent.prototype._onDropCallback = function (event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    };\n    return SortableComponent;\n}(AbstractComponent));\n__decorate$5([\n    Input('sortableIndex'),\n    __metadata$4(\"design:type\", Number)\n], SortableComponent.prototype, \"index\", void 0);\n__decorate$5([\n    Input(\"dragEnabled\"),\n    __metadata$4(\"design:type\", Boolean),\n    __metadata$4(\"design:paramtypes\", [Boolean])\n], SortableComponent.prototype, \"draggable\", null);\n__decorate$5([\n    Input(\"dropEnabled\"),\n    __metadata$4(\"design:type\", Boolean),\n    __metadata$4(\"design:paramtypes\", [Boolean])\n], SortableComponent.prototype, \"droppable\", null);\n__decorate$5([\n    Input(),\n    __metadata$4(\"design:type\", Object)\n], SortableComponent.prototype, \"dragData\", void 0);\n__decorate$5([\n    Input(\"effectAllowed\"),\n    __metadata$4(\"design:type\", String),\n    __metadata$4(\"design:paramtypes\", [String])\n], SortableComponent.prototype, \"effectallowed\", null);\n__decorate$5([\n    Input(\"effectCursor\"),\n    __metadata$4(\"design:type\", String),\n    __metadata$4(\"design:paramtypes\", [String])\n], SortableComponent.prototype, \"effectcursor\", null);\n__decorate$5([\n    Output(\"onDragSuccess\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragSuccessCallback\", void 0);\n__decorate$5([\n    Output(\"onDragStart\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragStartCallback\", void 0);\n__decorate$5([\n    Output(\"onDragOver\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragOverCallback\", void 0);\n__decorate$5([\n    Output(\"onDragEnd\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragEndCallback\", void 0);\n__decorate$5([\n    Output(\"onDropSuccess\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDropSuccessCallback\", void 0);\nSortableComponent = __decorate$5([\n    Directive({ selector: '[dnd-sortable]' }),\n    __metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        SortableContainer,\n        DragDropSortableService,\n        ChangeDetectorRef])\n], SortableComponent);\nvar SortableHandleComponent = /** @class */ (function (_super) {\n    __extends(SortableHandleComponent, _super);\n    function SortableHandleComponent(elemRef, dragDropService, config, _Component, cdr) {\n        return _super.call(this, elemRef, dragDropService, config, _Component, cdr) || this;\n    }\n    return SortableHandleComponent;\n}(AbstractHandleComponent));\nSortableHandleComponent = __decorate$5([\n    Directive({ selector: '[dnd-sortable-handle]' }),\n    __metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, SortableComponent,\n        ChangeDetectorRef])\n], SortableHandleComponent);\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\nvar DndModule = DndModule_1 = /** @class */ (function () {\n    function DndModule() {\n    }\n    DndModule.forRoot = function () {\n        return {\n            ngModule: DndModule_1,\n            providers: providers\n        };\n    };\n    return DndModule;\n}());\nDndModule = DndModule_1 = __decorate([\n    NgModule({\n        declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n        exports: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n    })\n], DndModule);\nvar DndModule_1;\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n/**\n * Generated bundle index. Do not edit.\n */\nexport { providers, DndModule, AbstractComponent, AbstractHandleComponent, DataTransferEffect, DragImage, DragDropConfig, DragDropData, dragDropServiceFactory, DragDropService, dragDropSortableServiceFactory, DragDropSortableService, DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent };\n//# sourceMappingURL=ng2-dnd.es5.js.map\n","module.exports = \"\\n\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\" fxLayoutGap=\\\"10px\\\"  fxFlexFill style=\\\"padding: 20px;\\\">\\n\\n\\t<div fxLayout=\\\"column\\\"  style=\\\"background-color: white; padding: 10px;\\\" fxLayoutAlign=\\\"space-between stretch\\\" fxLayoutGap=\\\"10px\\\"  fxFlexFill>\\t\\n\\t\\t<div >\\t\\n\\t\\t\\t<mat-toolbar >\\n\\t\\t\\t\\t\\t<h3 class=\\\"mat-heading\\\"> Move items between multi list sortable containers\\t</h3>\\n\\t\\t\\t</mat-toolbar>\\n\\t\\t</div>\\n\\t\\t<div fxFlexFill>\\t\\n\\t\\t\\t<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayout.lt-sm=\\\"column\\\">\\n\\t\\t\\t\\t<div class=\\\" mat-elevation-z4\\\" fxFlex=\\\"35\\\" >\\t\\n\\t\\t\\t\\t\\t<mat-toolbar>\\n\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"mat-title\\\">Tasks</h5>\\n\\t\\t\\t\\t\\t</mat-toolbar>\\n\\t\\t\\t\\t\\t<div  dnd-sortable-container [dropZones]=\\\"['boxers-zone']\\\" [sortableData]=\\\"tasks\\\">\\n\\t\\t\\t\\t\\t\\t<mat-nav-list>\\n\\t\\t\\t\\t\\t\\t\\t<mat-list-item  *ngFor=\\\"let item of tasks; let i = index\\\" class=\\\"list-group-item\\\" dnd-sortable [sortableIndex]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t{{ item }}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t</mat-nav-list>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\" mat-elevation-z4\\\" fxFlex=\\\"35\\\" >\\t\\n\\t\\t\\t\\t\\t<mat-toolbar>\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"mat-title\\\">Developers</h5>\\n\\t\\t\\t\\t\\t</mat-toolbar>\\n\\n\\t\\t\\t\\t\\t<div dnd-sortable-container [dropZones]=\\\"['boxers-zone']\\\" [sortableData]=\\\"developers\\\" style=\\\"height: 100%\\\">\\n\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t<mat-list-item *ngFor=\\\"let item1 of developers; let x = index\\\" class=\\\"list-group-item\\\" dnd-sortable [sortableIndex]=\\\"x\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item1}}\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\" mat-elevation-z4\\\" fxFlex=\\\"35\\\" >\\n\\t\\t\\t\\t\\t<mat-toolbar >\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"mat-title\\\">Testers</h5>\\n\\t\\t\\t\\t\\t</mat-toolbar>\\n\\n\\t\\t\\t\\t\\t<div dnd-sortable-container [dropZones]=\\\"['boxers-zone']\\\" [sortableData]=\\\"testers\\\" style=\\\"height: 100%\\\">\\n\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t<mat-list-item *ngFor=\\\"let item2 of testers; let y = index\\\" class=\\\"list-group-item\\\" dnd-sortable [sortableIndex]=\\\"y\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item2}}\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","module.exports = \".widgetHolder {\\n  padding: 10px; }\\n\\n.mat-list-item {\\n  background: white !important;\\n  border-bottom: 1px solid #e4e4e4; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3NhbnRvcy9GYWN0dXJhY2lvbi9mcm9udGVuZC9zcmMvYXBwL3NjcnVtYm9hcmQvc2NydW1ib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGFBQWEsRUFBQTs7QUFFZDtFQUNDLDRCQUE0QjtFQUM1QixnQ0FBZ0MsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NjcnVtYm9hcmQvc2NydW1ib2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWRnZXRIb2xkZXIge1xuXHRwYWRkaW5nOiAxMHB4O1xufVxuLm1hdC1saXN0LWl0ZW0ge1xuXHRiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xuXHRib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U0ZTRlNDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-scrumboard',\n  templateUrl: './scrumboard.component.html',\n  styleUrls: ['./scrumboard.component.scss']\n})\nexport class ScrumboardComponent {\n  \n    tasks: Array<string> = ['Sugar Ray Robinson', 'Muhammad Ali', 'George Foreman', 'Joe Frazier', 'Jake LaMotta', 'Joe Louis', 'Jack Dempsey', 'Rocky Marciano', 'Mike Tyson', 'Oscar De La Hoya'];\n    developers: Array<string> = [];\n    testers: Array<string> = [];\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrumboardComponent } from './scrumboard.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DndModule } from 'ng2-dnd';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {\n        MatToolbarModule,\n        MatListModule,\n        MatCardModule\n    } from '@angular/material';\nexport const ROUTES: Routes = [\n   { path: '', component: ScrumboardComponent },\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ROUTES),\n    DndModule.forRoot(),\n    FormsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatCardModule\n  ],\n  declarations: [ScrumboardComponent]\n})\nexport class ScrumboardModule { }\n"],"sourceRoot":""}