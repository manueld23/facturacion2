{"version":3,"sources":["webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.scss","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["module.exports = \"<div fxLayout=\\\"column\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\" style=\\\"background-image:url('../../../assets/login11.jpg');\\nheight: 100%;\\nbackground-repeat: no-repeat;\\nbackground-position: center;\\nbackground-size: cover; \\\">\\n    <div fxLayout=\\\"column\\\" >\\n   \\n        <div class=\\\" mat-elevation-z4\\\">\\n            <mat-card>\\n                <mat-card-title>User login\\n                    <a class=\\\"redirect\\\" [routerLink]=\\\"['/sigup']\\\">Register an account</a>\\n                </mat-card-title>\\n                <mat-card-content>\\n                    <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"login()\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                          <input type=\\\"email\\\" id=\\\"email\\\" class=\\\"input\\\" placeholder=\\\"Please enter your email\\\"\\n                                 formControlName=\\\"email\\\" required matInput>\\n                        </mat-form-field>\\n                        <div *ngIf=\\\"formErrors.email\\\" class=\\\"help is-danger\\\">\\n                            {{ formErrors.email }}\\n                        </div>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"input\\\" placeholder=\\\"please  enter your password\\\"\\n                            formControlName=\\\"password\\\" required matInput>\\n                        </mat-form-field>\\n                        <div *ngIf=\\\"formErrors.password\\\" class=\\\"help is-danger\\\">\\n                            {{ formErrors.password }}\\n                        </div>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" (click)=\\\"login()\\\">log in</button>\\n                        <a class=\\\"redirect\\\" [routerLink]=\\\"['/auth/dashboard']\\\">entrar</a>\\n                    </form>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".sigin-conainer {\\n  min-height: 100%;\\n  background-size: cover;\\n  padding: 100px; }\\n\\n.sigin-main {\\n  position: relative;\\n  margin: 0 auto;\\n  width: 500px; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.redirect {\\n  font-size: 14px;\\n  margin-left: 10px;\\n  color: #00AAAA; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3NhbnRvcy9GYWN0dXJhY2lvbi9mcm9udGVuZC9zcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9FO0VBQ0UsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtFQUN0QixjQUFjLEVBQUE7O0FBR2hCO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxZQUFZLEVBQUE7O0FBSWhCO0VBQ0UsV0FBVyxFQUFBOztBQVdiO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRncmF5LWxpZ2h0ZXI6ICNlY2VlZWYgIWRlZmF1bHQ7XG4kaW1hZ2VfcGF0aDogXCIvYXNzZXRzL2ltYWdlcy9cIiAhZGVmYXVsdDtcblxuJHByZWZpeDogJ3NpZ2luJztcblxuLiN7JHByZWZpeH0ge1xuXG4gICYtY29uYWluZXIge1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwYWRkaW5nOiAxMDBweDtcbiAgfVxuXG4gICYtbWFpbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiA1MDBweDtcbiAgfVxufVxuXG4uZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaGVscCB7XG5cbn1cblxuLmlzLWRhbmdlciB7XG5cbn1cblxuLnJlZGlyZWN0IHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgY29sb3I6ICMwMEFBQUE7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { AuthService } from '../../core/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  userForm: FormGroup;\n  formErrors = {\n    'email': '',\n    'password': ''\n  };\n  validationMessages = {\n    'email': {\n      'required': 'Please enter your email',\n      'email': 'please enter your vaild email'\n    },\n    'password': {\n      'required': 'please enter your password',\n      'pattern': 'The password must contain numbers and letters',\n      'minlength': 'Please enter more than 4 characters',\n      'maxlength': 'Please enter less than 25 characters',\n    }\n  };\n\n  constructor(private router: Router,\n              private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.userForm = this.fb.group({\n      'email': ['', [\n        Validators.required,\n        Validators.email\n      ]\n      ],\n      'password': ['', [\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\n        Validators.minLength(6),\n        Validators.maxLength(25)\n      ]\n      ],\n    });\n\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    // if (!this.userForm) {\n    //   return;\n    // }\n    // const form = this.userForm;\n    // for (const field in this.formErrors) {\n    //   if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\n    //     this.formErrors[field] = '';\n    //     const control = form.get(field);\n    //     if (control && control.dirty && !control.valid) {\n    //       const messages = this.validationMessages[field];\n    //       for (const key in control.errors) {\n    //         if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\n    //           this.formErrors[field] += messages[key] + ' ';\n    //         }\n    //       }\n    //     }\n    //   }\n    // }\n  }\n  login() {\n    this.router.navigate(['/']);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { \n        MatCardModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule\n       } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n    {path: '', component: LoginComponent},\n  ];\n@NgModule({\n    imports: [\n        MatCardModule,\n        CommonModule,\n        FlexLayoutModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatInputModule,\n        MatToolbarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [   \n        LoginComponent,\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [\n    ]\n})\nexport class LoginModule {\n}\n"],"sourceRoot":""}